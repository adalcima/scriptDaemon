#!/bin/sh

## BEGIN INIT INFO
# Provides:          uuidd
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Create scripts for uuid
# Description:       Based on status of DB publishers, create/update uuid scripts
#                    and save it.
## END INIT INFO

# route where the service is located
DIR=/usr/local/bin/uuidDaemon
DAEMON=$DIR/main.py
DAEMON_NAME=uuidd
DESC="UUID Daemon"

# Add any command line options for your daemon here
DAEMON_OPTS=""

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

#. /lib/lsb/init-functions

do_start () {
    start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --exec $DAEMON -- $DAEMON_OPTS 
}
do_stop () {
    start-stop-daemon --stop --pidfile $PIDFILE --retry 10
    rm -f $PIDFILE
}

case "$1" in

    start|stop)
        do_${1}
        ;;

    restart|reload|force-reload)
        do_stop
        do_start
        ;;

    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
        ;;

    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;

esac
exit 0